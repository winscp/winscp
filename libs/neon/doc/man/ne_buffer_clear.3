'\" t
.\"     Title: ne_buffer_clear
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 15 April 2025
.\"    Manual: neon API reference
.\"    Source: neon 0.34.2
.\"  Language: English
.\"
.TH "NE_BUFFER_CLEAR" "3" "15 April 2025" "neon 0.34.2" "neon API reference"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ne_buffer_clear, ne_buffer_grow, ne_buffer_altered \- clear, grow, or mark as altered a string buffer
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <ne_string\&.h>
.fi
.ft
.HP \w'void\ ne_buffer_clear('u
.BI "void ne_buffer_clear(ne_buffer\ *" "buf" ");"
.HP \w'void\ ne_buffer_altered('u
.BI "void ne_buffer_altered(ne_buffer\ *" "buf" ");"
.HP \w'void\ ne_buffer_grow('u
.BI "void ne_buffer_grow(ne_buffer\ *" "buf" ", size_t\ " "size" ");"
.SH "DESCRIPTION"
.PP
The
\fBne_buffer_clear\fR
function sets the string stored in
\fIbuf\fR
to be the empty string ("")\&.
.PP
The
\fBne_buffer_altered\fR
function must be used after the string stored in the buffer
\fIbuf\fR
is modified by directly rather than using
ne_buffer_append,
ne_buffer_zappend
or
ne_buffer_concat\&.
.PP
The
\fBne_buffer_grow\fR
function ensures that at least
\fIsize\fR
bytes are allocated for the string; this can be used if a large amount of data is going to be appended to the buffer and may result in more efficient memory allocation\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2001-2024 Joe Orton
.br
